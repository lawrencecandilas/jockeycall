# jockeycall channel configuration file for example-station
#
# Keep in mind: jockeycall's whole job is to look at a directory containing an
# arrangement of schedules, according to the current time and history of played
# items, and find the path of an MP3 that should be played.
#
# - This is called 'delivering a track.'
#
# - This can integrate with ezstream--an instance of ezstream which should be
# pointed to a working icecast server.
#   - This was originally the only delivery method jockeycall supported.
#   - If you want to use ezstream integration and don't have a working Icecast
#     setup, figure that out first. :)
#
# - This can also integrate with a command pipeline that jockeycall executes--
# so you don't have to use ezstream if you don't want to.
#   - If you want jockeycall to play stuff on your system's actual speaker,
#     this is the way to go.
#

# Configuration options:

# schedules_at: Directory that contains schedules.
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
#
#   - For example, if you call jockeycall with the following:
#     `jockeycall.pl transmit /usr/share/jockeycall/example-station ...`
#     then jockeycall looks at 
#      "/usr/share/jockeycall/example-station/schedule"
#     for schedules.
#
# - If this directory is empty, jockeycall will go into intermission mode.
#
schedules_at schedule

# subdir_wday_XXX: Weekday subdirectories beneath schedule directory.
#
# - These are relative to the schedule directory above.
#
#   - For example, if you call jockeycall with the following:
#     `jockeycall.pl transmit /usr/share/jockeycall/example-station ...`
#     then jockeycall looks at 
#      "/usr/share/jockeycall/example-station/schedule/normal/weekday"
#     if "normal/weekday" is defined for one of the days of the week below.
#
subdir_wday_sun weekend
subdir_wday_mon weekday
subdir_wday_tue weekday
subdir_wday_wed weekday
subdir_wday_thu weekday
subdir_wday_fri weekday
subdir_wday_sat weekend

# intermission_at: Directory containing intermission tracks
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
#
# - This directory should contain tracks that are delivered during
#   intermission.
#
# - jockeycall will go into intermission if a timeslot ends.
#
#   - This happens if is set to not repeat and it's not time for the next
#     timeslot yet.
#
#   - Also happens if it's toward the end of a timeslot and jockeycall can't
#     find a track that will fit in the alloted time.
#
#   - Also happens if you simply don't define any schedules.
#
# - If you have no schedules and no intermission tracks, jockeycall will 
#   assume you screwed up and deliver the "Technical Difficulties" track.
#
intermission_at intermission

# This item tells jockeycall.pl where the sqlite database holding the channel
# state is.
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
# - The FILE doesn't have to exist but the directory specified here does.
#
# This database can be deleted at any time, the worst that'll happen is that
# you'll hear songs again because this database contains the play histories.
#
state_db database/state.db

# This item tells jockeycall.pl where the sqlite database holding the metadata
# cache is.
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
# - The FILE doesn't have to exist but the directory specified here does.

# When jockeycall.pl encounters a track it hasn't seen before, it will run
# mp3info on it to determine how long it is, and cache the data here for later
# faster lookup.  It also stores play count and other information.
#
# This database can be deleted at any time, the worst that'll happen is a 
# delay when jockeycall.pl enters a new timeslot and runs mp3info on every
# track, and a reset of the play counts.
#
metadata_db database/metadata.db

# logs_at: directory to hold logs, relative to channel directory.
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
#
# - Must be writeable by the user jockeycall is running as.
#
# - jockeycall writes 2 daily logs:
#   - "public" logs that are simply a list of times and tracks played,
#     periodics are not included.
#   - "priviate" logs that include periodics and event markers, which can be
#     used to verify schedules and periodics are happening as designed.
#
logs_at logs

# day_flip_at: When should the next day start?
#
# - What time of day that jockeycall starts looking at the next day's schedule.
#   Most people consider, for example, 12:01 am Sunday part of Saturday night,
#   and don't consider it Sunday until they go to bed at 2am and wake up the
#   next day.
#
# - Time must be in 1XXXX where XXXX is a 24-hour time, beginning with 0 if
#   necessary.  E.g. 10200 is 2:00am, 11300 is 1:00pm.
#
day_flip_at 10400

# random_at: directory to hold channel random tracks.
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
#
# - Some percentage of the time, jockeycall will decide to ignore the flow and
# play a random track, if random tracks are provided.
#
# - This setting controls a channel-wide directory where jockeycall will look 
# and select tracks from.  This directory is optional.
#
#   Additionally, a directory called 'random' can optionally exist in a
# schedule's timeslot.
#
#   Tracks from both directories are combined into a pool for selection when
# it's random time.
#
# - Nothing happens if:
#   * there is no `random` directory(ies) at all
#   * the random directory(ies) exist but are empty
#   * all tracks in the directory(ies) have been played in that timeslot.
#
random_at random

# random_percent: chance of random track
#
# jockeycall picks a random number 0 to 99, and if it's equal to or under
# this number, it's random time.
#
random_percent 42

# track_td: technical difficulties track
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
#
# - If jockeycall runs into trouble it will deliver this track.
#   Possible situations are not being able to open or read anything.
#
#   (Note: Configuration failures typically prevent jockeycall from even 
#   starting.)
#
# - This track is also delivered if there are no schedules and no tracks in the
#   intermissions.
#
track_td alerts/td.mp3

# track_um: under maintenance track
#
# - This is relative to the channel directory path, set as the first argument
#   for `jockeycall.pl transmit`, or otherwise set using the
#   JOCKEYCALL_CHANNEL environment variable.
#
# - This track will be delivered over and over if jockeycall is in maintenance
#   mode.
#
track_um alerts/um.mp3

# yellow_zone_mins: define yellow zone
# red_zone_mins: define red zone
#
# Yellow and red zones are an amount of time before the current timeslot ends.
#
# - Intermissions don't have zones.
#
# The yellow zone will happen X minutes before the end of the timeslot.
# The red zone will will happen Y minutes before the end of the timeslot.
# You want X to be bigger than Y.
#
# Default is the yellow zone starts 12 minutes before schedule end, and the
# red zone starts 8 minutes before schedule end.
#
# - When a timeslot is in the yellow or red zone:
#   Existing operations are cancelled.
#   No new ones can be started.
#
# - If you put 2 timeslots together where they have less than X or Y minutes,
#   the timeslot will start in that zone from the first track played.
#
# - Periodic directories yellow-mark and red-mark are triggered when
#   thresholds are crossed.
#
yellow_zone_mins 12
red_zone_mins 8

# deliver_type: what happens during track delivery
#
# What jockeycall should do when delivering a track.
# 
# - This can be one of the following:
#
#   - "ezstream" (default): Uses default ezstream integration.  jockeycall will
#     output the track name on stdout as ezstream expects, and the metadata
#     program hook symlinks can also be used.
#
#   - "command": Uses a command pipeline defined in deliver_command.
#     jockeycall will execute this command with the track name slipped in as
#     parameter where specified.
#
deliver_type command

# deliver_command: command pipeline to execute if deliver_type is "command"
#
# What the above says.
# This option is ignored if deliver_type is "ezstream".
#
# Details
#
# - The command text can contain redirection operators
# - PATH has jockeycall's bin directory appended to it
# - % is replaced by the full track path, quoted with double quote marks ""
# - The environment variable JOCKEYCALL_TRACK_SECONDS is set to the duration of
#   the track, in seconds
#
# If you have madplay and aplay installed, you can make jockeycall play out of
# this system's speaker with the following:
#
#deliver_command madplay -Q -ocdda:- % | aplay -q -f cdr
#
deliver_command echo %

# deliver_wait: 
#
# If this is 1 the transmit subcommand will sleep until the duration of the
# track has passed.
#
# If this is not desired, 0 should be specified.  
#
# This may be needed if the deliver_command returns immediately and plays the
# audio in the background, or hands it off to another system in some way.
#
deliver_wait 0

